#!/usr/bin/python3
#Shayna Anderson-Hill
#Script to write compute the fibonacci and lucas series
#01-24-2018


#The Fibonacci Series starts with the integers 0 and 1.
#The next integer is determined by summing the previous two.

def fibonacci(n):
    """Return the nth value in the Fibonacci Series.""" 
    n = n-2
    fib_list = [0, 1]
    for i in range(1,n+1):
        fib_list.append(fib_list[(i-1)] + fib_list[i])
    return fib_list[n+1]


#The Lucas Numbers are a related series that 
#start with the integers 2 and 1.
    
def lucas(n):
    """Return the nth value in the Lucas Numbers.""" 
    n = n-2
    lucas_list = [2, 1]
    for i in range(1,n+1):
        lucas_list.append(lucas_list[(i-1)] + lucas_list[i])
    return lucas_list[n+1]

def sum_series(n, first_value=0, second_value=1):
    """Return the nth value in the series.""" 
    n = n-2
    gen_list = [first_value, second_value]
    for i in range(1,n+1):
        gen_list.append(gen_list[(i-1)] + gen_list[i])
    return gen_list[n+1]

#Test that the 8th value in the Fibonacci Series is 13
#[0, 1, 1, 2, 3, 5, 8, 13]
assert fibonacci(8) == 13

#Test that the 8th value in the Lucas Numbers is 29
#[2, 1, 3, 4, 7, 11, 18, 29]
assert lucas(8) == 29

#Test that calling the sum_series function with no optional parameters
#produces the Fibonacci Series
assert sum_series(7) == fibonacci(7)

#Test that calling the sum_series function with the optional arguments
#integers 2 and 1 will produce values from the Lucas Numbers
assert sum_series(6, first_value=2, second_value=1) == lucas(6)

#Test that the 8th value in the generalized series 
#is generated by starting the series with the first and second value 
#and that the next integer is determined by summing the previous two.

assert sum_series(8, first_value=-1, second_value=0) == -8
#[-1, 0, -1, -1, -2, -3, -5, -8]




